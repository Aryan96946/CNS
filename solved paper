                     PART A

1. What is meant by Denial of service attack ? 
2. What is Active and Passive Attack? 
3. What are the different modes of operation in DES? 
4. What are the operations used in AES ? 
5. What is meant by message authentication? 
6. What is hash function? 
7. What is MIME? 
8. Write two transport layer protocol ? 
9. What is authentication header ? 
10. What is single sign on? 

ANSWERS  


---

### *1. What is meant by Denial of Service Attack?*
A Denial of Service (DoS) attack is a malicious attempt to disrupt the normal functioning of a network, service, or server by overwhelming it with a flood of illegitimate requests or traffic. This makes the system unavailable to legitimate users.  
- *Objective*: To exhaust resources like bandwidth, memory, or processing power.  
- *Types*:  
  1. *Single-source DoS*: Attack originates from one system.  
  2. *Distributed DoS (DDoS)*: Multiple systems coordinate to attack a target.  
- *Impact*: Causes downtime, loss of revenue, and reputational damage.  
- *Example*: Flooding a website with traffic until it crashes.  
- *Prevention*: Use firewalls, intrusion detection systems, and traffic filtering.

---

### *2. What is Active and Passive Attack?*
- *Active Attack*:  
  - An attacker actively attempts to alter or disrupt the system, data, or communication.  
  - Examples: Spoofing, Man-in-the-Middle (MITM), and Denial of Service (DoS).  
  - *Impact*: Data modification, unauthorized access, or system disruption.  
  - *Detection*: Easier to detect due to visible changes.  

- *Passive Attack*:  
  - An attacker monitors or eavesdrops on communication without altering it.  
  - Examples: Packet sniffing, traffic analysis.  
  - *Impact*: Confidentiality is compromised.  
  - *Detection*: Harder to detect as there is no alteration of data.  

---

### *3. What are the different modes of operation in DES?*
DES (Data Encryption Standard) uses several modes of operation to encrypt data:  
1. *ECB (Electronic Codebook)*: Encrypts each block independently. Simple but less secure.  
2. *CBC (Cipher Block Chaining)*: Each block is XORed with the previous ciphertext block before encryption. Provides better security.  
3. *CFB (Cipher Feedback)*: Converts DES into a stream cipher. Encrypts small increments of data.  
4. *OFB (Output Feedback)*: Similar to CFB but uses the previous output for encryption.  
5. *CTR (Counter)*: Uses a counter value for encryption. Allows parallel processing.  

---

### *4. What are the operations used in AES?*
AES (Advanced Encryption Standard) uses the following operations:  
1. *SubBytes*: Non-linear substitution using a lookup table (S-box).  
2. *ShiftRows*: Shifts rows of the state matrix cyclically.  
3. *MixColumns*: Mixes columns using matrix multiplication.  
4. *AddRoundKey*: XORs the state with a round key.  
5. *Key Expansion*: Generates round keys from the initial key.  
- AES operates on 128-bit blocks and supports key sizes of 128, 192, or 256 bits.  

---

### *5. What is meant by message authentication?*
Message authentication ensures the integrity and authenticity of a message. It verifies:  
1. *Integrity*: The message has not been altered during transmission.  
2. *Authenticity*: The message is from the claimed sender.  
- *Methods*:  
  - *MAC (Message Authentication Code)*: A cryptographic checksum generated using a secret key.  
  - *Digital Signatures*: Uses asymmetric cryptography for authentication.  
- *Applications*: Secure communication, email, and financial transactions.  

---

### *6. What is a hash function?*
A hash function is a cryptographic algorithm that takes an input (message) and produces a fixed-size output (hash value).  
- *Properties*:  
  1. *Deterministic*: Same input always produces the same hash.  
  2. *Pre-image resistance*: Hard to reverse-engineer the input from the hash.  
  3. *Avalanche effect*: Small changes in input produce significantly different hashes.  
  4. *Collision resistance*: Hard to find two inputs with the same hash.  
- *Examples*: SHA-256, MD5.  
- *Applications*: Password storage, digital signatures, and data integrity checks.  

---

### *7. What is MIME?*
MIME (Multipurpose Internet Mail Extensions) is a standard for formatting files to be sent over the internet.  
- *Purpose*: Extends email to support text in character sets other than ASCII, attachments, and multimedia content.  
- *Features*:  
  1. Supports non-text attachments (images, audio, video).  
  2. Allows multiple parts in a single message.  
  3. Specifies content types (e.g., text/plain, image/jpeg).  
- *Applications*: Email, HTTP, and file transfers.  

---

### *8. Write two transport layer protocols.*
1. *TCP (Transmission Control Protocol)*:  
   - Connection-oriented, reliable, and ensures data delivery in order.  
   - Used for applications requiring high reliability (e.g., web browsing, email).  

2. *UDP (User Datagram Protocol)*:  
   - Connectionless, faster, but less reliable.  
   - Used for real-time applications (e.g., video streaming, online gaming).  

---

### *9. What is an authentication header?*
The Authentication Header (AH) is a component of IPsec (Internet Protocol Security) used to provide:  
1. *Data Integrity*: Ensures the message has not been tampered with.  
2. *Authentication*: Verifies the sender's identity.  
3. *Anti-Replay Protection*: Prevents replay attacks.  
- *How it works*: Adds a header to the IP packet containing a hash of the packet and a sequence number.  
- *Limitations*: Does not provide encryption (confidentiality).  

---

### *10. What is Single Sign-On?*
Single Sign-On (SSO) is an authentication mechanism that allows users to log in once and access multiple systems or applications without re-entering credentials.  
- *How it works*:  
  1. User logs into a central authentication server.  
  2. The server issues a token or ticket.  
  3. The token is used to access other systems.  
- *Benefits*:  
  1. Improves user experience.  
  2. Reduces password fatigue.  
  3. Simplifies password management.  
- *Examples*: Google SSO, Microsoft Azure AD.  

------------------------------------------------------------------------------------------------------------------------------------
                          part B


1. Differentiate between Active attacks and passive attacks. 
2. Explain the key Expansion process in AES. 
3 What are the requirements of the cryptographic hash functions? 
What are the requirements of web security? 
5. What is e-mail security? Explain the technique for e-mail security? 
6. Explain technical deficiencies of Kerberos v4. 
7 Difference between Substitution Cipher technique and Transposition Cipher technique. 


Here are the detailed answers to your questions, each explained to meet the 10-mark criteria:

---

### *1. Differentiate between Active Attacks and Passive Attacks*

| *Aspect*              | *Active Attacks*                                                                 | *Passive Attacks*                                                       |
|--------------------------|-----------------------------------------------------------------------------------|---------------------------------------------------------------------------|
| *Definition*           | Attacks where the attacker actively alters or disrupts the system or data.        | Attacks where the attacker monitors or eavesdrops without altering data.  |
| *Objective*            | To modify, disrupt, or destroy data or systems.                                   | To gain unauthorized access to information without detection.             |
| *Detection*            | Easier to detect as they involve changes to data or system behavior.              | Harder to detect as they do not alter data or system behavior.            |
| *Examples*             | Spoofing, Man-in-the-Middle (MITM), Denial of Service (DoS), Replay attacks.      | Packet sniffing, traffic analysis, eavesdropping.                         |
| *Impact*               | Data integrity and availability are compromised.                                  | Data confidentiality is compromised.                                      |
| *Prevention*           | Use firewalls, intrusion detection systems (IDS), and encryption.                 | Use encryption, secure communication protocols, and network monitoring.  |
| *Visibility*           | Visible to the victim as the system or data is altered.                           | Invisible to the victim as no changes are made.                           |
| *Risk Level*           | High risk as it directly affects system functionality.                            | Lower risk as it only involves unauthorized access to information.        |

---

### *2. Explain the Key Expansion Process in AES*

The *Key Expansion* process in AES generates a series of round keys from the initial cipher key. These round keys are used in each round of the AES encryption and decryption process.  
- *Steps*:  
  1. *Initial Key*: The process starts with the initial cipher key (128, 192, or 256 bits).  
  2. *Round Constants*: A set of constants (RC) is used to introduce non-linearity.  
  3. *SubWord*: A non-linear substitution (using S-box) is applied to each byte of the word.  
  4. *RotWord*: A cyclic shift is applied to the bytes of the word.  
  5. *XOR Operations*: The result is XORed with the previous word and the round constant.  
  6. *Repeat*: The process is repeated to generate all required round keys.  

- *Example*: For AES-128, 10 rounds are performed, and 11 round keys are generated.  
- *Purpose*: Ensures each round of encryption uses a unique key, enhancing security.  

---

### *3. What are the Requirements of Cryptographic Hash Functions?*

Cryptographic hash functions must satisfy the following requirements:  
1. *Pre-image Resistance*: Given a hash value, it should be computationally infeasible to find the original input.  
2. *Second Pre-image Resistance*: Given an input, it should be infeasible to find another input that produces the same hash.  
3. *Collision Resistance*: It should be infeasible to find two different inputs that produce the same hash.  
4. *Deterministic*: The same input must always produce the same hash.  
5. *Avalanche Effect*: A small change in the input should produce a significantly different hash.  
6. *Fixed Output Size*: The hash function should produce a fixed-size output regardless of input size.  
7. *Efficiency*: The hash function should be computationally efficient.  
8. *Non-Reversibility*: It should be computationally infeasible to reverse the hash function.  

---

### *4. What are the Requirements of Web Security?*

Web security aims to protect websites, applications, and users from cyber threats. The key requirements are:  
1. *Confidentiality*: Ensure data is accessible only to authorized users (e.g., HTTPS, encryption).  
2. *Integrity*: Protect data from unauthorized modification (e.g., hashing, digital signatures).  
3. *Availability*: Ensure the website or service is accessible to legitimate users (e.g., DDoS protection).  
4. *Authentication*: Verify the identity of users (e.g., passwords, multi-factor authentication).  
5. *Authorization*: Ensure users have appropriate access rights.  
6. *Secure Communication*: Use protocols like HTTPS, SSL/TLS to secure data in transit.  
7. *Input Validation*: Prevent injection attacks (e.g., SQL injection, XSS).  
8. *Session Management*: Secure session tokens and prevent session hijacking.  
9. *Regular Updates*: Patch vulnerabilities in software and frameworks.  
10. *Logging and Monitoring*: Detect and respond to security incidents.  

---

### *5. What is E-mail Security? Explain the Techniques for E-mail Security*

*E-mail Security* refers to the measures taken to protect email communication from unauthorized access, data breaches, and cyber threats.  

*Techniques*:  
1. *Encryption*:  
   - *S/MIME (Secure/Multipurpose Internet Mail Extensions)*: Encrypts email content and attachments.  
   - *PGP (Pretty Good Privacy)*: Uses public-key cryptography for encryption and digital signatures.  
2. *Digital Signatures*: Verify the authenticity and integrity of the sender and message.  
3. *Spam Filters*: Block unsolicited and malicious emails.  
4. *Authentication Protocols*: Use SPF, DKIM, and DMARC to prevent email spoofing.  
5. *Secure Protocols*: Use TLS/SSL to secure email transmission.  
6. *Access Control*: Restrict access to email accounts using strong passwords and MFA.  
7. *Regular Updates*: Patch email clients and servers to fix vulnerabilities.  

---

### *6. Explain Technical Deficiencies of Kerberos v4*

Kerberos v4 has several technical deficiencies:  
1. *Weak Encryption*: Uses DES, which is now considered insecure.  
2. *Limited Ticket Lifetimes*: Short ticket lifetimes can cause frequent re-authentication.  
3. *No Mutual Authentication*: Does not fully support mutual authentication between client and server.  
4. *Replay Attacks*: Vulnerable to replay attacks due to lack of proper replay protection.  
5. *No Forward Secrecy*: Compromised session keys can decrypt past communications.  
6. *Limited Cross-Realm Authentication*: Difficult to implement in large, distributed environments.  
7. *No Support for Modern Protocols*: Lacks support for modern cryptographic algorithms and protocols.  
8. *Single Point of Failure*: The Key Distribution Center (KDC) is a single point of failure.  

---

### *7. Difference Between Substitution Cipher Technique and Transposition Cipher Technique*

| *Aspect*              | *Substitution Cipher*                                                                 | *Transposition Cipher*                                                  |
|--------------------------|---------------------------------------------------------------------------------------|---------------------------------------------------------------------------|
| *Definition*           | Replaces each character in the plaintext with another character.                      | Rearranges the characters in the plaintext to form ciphertext.            |
| *Technique*            | Substitutes letters based on a fixed system (e.g., Caesar cipher, Vigenère cipher).   | Shuffles letters using a specific algorithm (e.g., Rail Fence cipher).    |
| *Key Usage*            | Uses a key to determine the substitution pattern.                                     | Uses a key to determine the rearrangement pattern.                        |
| *Security*             | Vulnerable to frequency analysis attacks.                                             | More resistant to frequency analysis but vulnerable to pattern analysis.  |
| *Example*              | Caesar cipher replaces each letter with one a fixed number of places down the alphabet.| Rail Fence cipher writes the message in a zigzag pattern and reads it row-wise. |
| *Complexity*           | Easier to implement but less secure.                                                 | More complex to implement but offers better security.                     |
| *Application*          | Used in simple encryption systems.                                                   | Used in combination with substitution ciphers for enhanced security.      |

---
--------------------------------------------------------------------------------------------------------------------------------------------------
                                PART C

1. Explain the security services classifications and security mechanisms in detail.
2. Explain the key expansion and round functions of Blowfish algorithm. 
3. Explain the different message authentication functions. 
4. Explain Secure Socket Layer in detail. 
5 Explain Encapsulating IP Security Payload in detail.

### *Security Services Classifications and Security Mechanisms*

Security services and mechanisms are essential components of a secure system. They ensure the confidentiality, integrity, availability, and authenticity of data and systems. Below is a detailed explanation of both:

---

### *1. Security Services Classifications*

Security services are broadly classified into the following categories:

#### *a. Confidentiality*
- *Definition*: Ensures that data is accessible only to authorized users.
- *Purpose*: Protects sensitive information from unauthorized access.
- *Examples*:
  - Encryption of data in transit (e.g., HTTPS, SSL/TLS).
  - Encryption of data at rest (e.g., AES, RSA).
- *Applications*: Secure communication, storage of sensitive data.

#### *b. Integrity*
- *Definition*: Ensures that data is not altered or tampered with during transmission or storage.
- *Purpose*: Protects data from unauthorized modification.
- *Examples*:
  - Hash functions (e.g., SHA-256) to verify data integrity.
  - Digital signatures to ensure data authenticity.
- *Applications*: Financial transactions, software updates.

#### *c. Authentication*
- *Definition*: Verifies the identity of users or systems.
- *Purpose*: Ensures that only legitimate users can access the system.
- *Examples*:
  - Passwords, biometrics, and multi-factor authentication (MFA).
  - Digital certificates for system authentication.
- *Applications*: User login, secure access to systems.

#### *d. Authorization*
- *Definition*: Grants or restricts access to resources based on user roles and permissions.
- *Purpose*: Ensures that users have appropriate access rights.
- *Examples*:
  - Role-Based Access Control (RBAC).
  - Access Control Lists (ACLs).
- *Applications*: File systems, database access.

#### *e. Non-Repudiation*
- *Definition*: Ensures that a party cannot deny the authenticity of their actions.
- *Purpose*: Provides proof of the origin and integrity of data.
- *Examples*:
  - Digital signatures.
  - Audit logs.
- *Applications*: Legal documents, financial transactions.

#### *f. Availability*
- *Definition*: Ensures that systems and data are accessible when needed.
- *Purpose*: Protects against disruptions and downtime.
- *Examples*:
  - Redundancy and failover mechanisms.
  - DDoS protection.
- *Applications*: Online services, critical infrastructure.

---

### *2. Security Mechanisms*

Security mechanisms are the tools and techniques used to implement security services. They are classified as follows:

#### *a. Cryptographic Techniques*
- *Purpose*: Provide confidentiality, integrity, and authentication.
- *Examples*:
  - *Symmetric Encryption*: AES, DES (for confidentiality).
  - *Asymmetric Encryption*: RSA, ECC (for key exchange and digital signatures).
  - *Hash Functions*: SHA-256, MD5 (for integrity).
  - *Digital Signatures*: RSA, DSA (for authentication and non-repudiation).

#### *b. Access Control Mechanisms*
- *Purpose*: Restrict access to resources based on user roles and permissions.
- *Examples*:
  - *Role-Based Access Control (RBAC)*: Assigns permissions based on roles.
  - *Access Control Lists (ACLs)*: Specifies which users can access specific resources.
  - *Mandatory Access Control (MAC)*: Enforces access based on security labels.

#### *c. Authentication Mechanisms*
- *Purpose*: Verify the identity of users or systems.
- *Examples*:
  - *Passwords*: Simple but vulnerable to attacks.
  - *Biometrics*: Fingerprint, facial recognition.
  - *Multi-Factor Authentication (MFA)*: Combines multiple authentication methods.
  - *Digital Certificates*: Used in SSL/TLS for system authentication.

#### *d. Intrusion Detection and Prevention Systems (IDPS)*
- *Purpose*: Monitor and prevent unauthorized access or attacks.
- *Examples*:
  - *Signature-Based Detection*: Matches known attack patterns.
  - *Anomaly-Based Detection*: Identifies unusual behavior.
  - *Firewalls*: Filter incoming and outgoing traffic.

#### *e. Physical Security Mechanisms*
- *Purpose*: Protect physical assets and infrastructure.
- *Examples*:
  - Surveillance cameras.
  - Biometric access controls (e.g., fingerprint scanners).
  - Secure facilities (e.g., data centers).

#### *f. Network Security Mechanisms*
- *Purpose*: Secure data in transit and protect network infrastructure.
- *Examples*:
  - *Firewalls*: Filter traffic based on security rules.
  - *Virtual Private Networks (VPNs)*: Encrypt data over public networks.
  - *Intrusion Detection Systems (IDS)*: Monitor network traffic for suspicious activity.

#### *g. Logging and Auditing*
- *Purpose*: Track and analyze system activities for security and compliance.
- *Examples*:
  - *Audit Logs*: Record user actions and system events.
  - *SIEM (Security Information and Event Management)*: Centralized logging and analysis.

#### *h. Redundancy and Backup*
- *Purpose*: Ensure data availability and recovery in case of failure.
- *Examples*:
  - *RAID (Redundant Array of Independent Disks)*: Data redundancy for storage.
  - *Backup Solutions*: Regular backups to prevent data loss.

---

### *Relationship Between Security Services and Mechanisms*

| *Security Service* | *Security Mechanisms*                                                                 |
|-----------------------|----------------------------------------------------------------------------------------|
| *Confidentiality*   | Encryption (AES, RSA), VPNs, Access Control.                                           |
| *Integrity*         | Hash Functions (SHA-256), Digital Signatures.                                          |
| *Authentication*    | Passwords, Biometrics, MFA, Digital Certificates.                                      |
| *Authorization*     | RBAC, ACLs, MAC.                                                                      |
| *Non-Repudiation*   | Digital Signatures, Audit Logs.                                                       |
| *Availability*      | Redundancy, Backup, DDoS Protection.                                                  |

---

### *Conclusion*
Security services and mechanisms work together to protect systems and data from threats. By understanding their classifications and implementations, organizations can design robust security frameworks to safeguard their assets.


Here are the detailed answers to your questions, each explained to meet the 10-mark criteria:

---

### *2. Explain the Key Expansion and Round Functions of the Blowfish Algorithm*

The *Blowfish algorithm* is a symmetric-key block cipher designed by Bruce Schneier. It operates on 64-bit blocks and supports key sizes from 32 to 448 bits. Below is an explanation of its *key expansion* and *round functions*:

#### *Key Expansion*
1. *Purpose*: Generates subkeys (P-array and S-boxes) from the user-provided key.
2. *Steps*:
   - Initialize the P-array and S-boxes with fixed values derived from the hexadecimal digits of π (pi).
   - XOR the P-array with the user-provided key in chunks.
   - Encrypt the all-zero string using the current P-array and S-boxes.
   - Replace the P-array and S-boxes with the output of the encryption process.
   - Repeat the process until all subkeys are generated.
3. *Output*: 18 subkeys (P-array) and 4 S-boxes (each with 256 entries).

#### *Round Function*
1. *Structure*: Blowfish uses a Feistel network with 16 rounds.
2. *Steps in Each Round*:
   - *Divide the 64-bit block into two 32-bit halves (L and R)*.
   - *F-function*:
     - Divide R into four 8-bit quarters (a, b, c, d).
     - Use these quarters as indices into the S-boxes.
     - Combine the results using modular addition and XOR operations.
   - *XOR L with the output of the F-function*.
   - *Swap L and R* (except in the final round).
3. *Final Step*:
   - After 16 rounds, swap L and R one last time.
   - XOR L and R with the last two subkeys (P17 and P18).

#### *Summary*
- *Key Expansion*: Generates subkeys and S-boxes from the user key.
- *Round Function*: Uses a Feistel network and F-function to encrypt data.

---

### *3. Explain the Different Message Authentication Functions*

Message authentication ensures the integrity and authenticity of a message. Below are the key message authentication functions:

#### *a. Message Authentication Code (MAC)*
1. *Definition*: A short piece of information used to authenticate a message.
2. *How it works*:
   - A secret key is shared between the sender and receiver.
   - The sender computes a MAC using a cryptographic hash function (e.g., HMAC) and the secret key.
   - The receiver recomputes the MAC and verifies it.
3. *Examples*: HMAC (Hash-based MAC), CMAC (Cipher-based MAC).

#### *b. Hash Functions*
1. *Definition*: A function that takes an input and produces a fixed-size output (hash value).
2. *Purpose*: Ensure data integrity.
3. *Examples*: SHA-256, MD5.

#### *c. Digital Signatures*
1. *Definition*: A cryptographic technique that uses asymmetric encryption to authenticate a message.
2. *How it works*:
   - The sender signs the message using their private key.
   - The receiver verifies the signature using the sender's public key.
3. *Examples*: RSA, DSA.

#### *d. HMAC (Hash-based MAC)*
1. *Definition*: A specific type of MAC that uses a cryptographic hash function and a secret key.
2. *How it works*:
   - Combines the message and secret key using a hash function (e.g., SHA-256).
   - Produces a fixed-size output for authentication.
3. *Applications*: Secure communication, API authentication.

#### *e. CMAC (Cipher-based MAC)*
1. *Definition*: A MAC based on block ciphers (e.g., AES).
2. *How it works*:
   - Uses a block cipher to generate a MAC.
   - Suitable for environments where hash functions are not available.
3. *Applications*: Network security, data integrity.

---

### *4. Explain Secure Socket Layer (SSL) in Detail*

*Secure Socket Layer (SSL)* is a cryptographic protocol designed to provide secure communication over a computer network. It is the predecessor to TLS (Transport Layer Security).

#### *Key Features*
1. *Purpose*: Ensures confidentiality, integrity, and authentication of data in transit.
2. *Layers*: Operates between the application layer and transport layer (e.g., TCP).

#### *How SSL Works*
1. *Handshake Protocol*:
   - Establishes a secure session between the client and server.
   - Steps:
     - Client sends a "ClientHello" message with supported encryption algorithms.
     - Server responds with a "ServerHello" message, selecting the encryption method.
     - Server sends its digital certificate for authentication.
     - Client verifies the certificate and generates a pre-master secret.
     - Both parties derive the master secret and session keys.
2. *Record Protocol*:
   - Encrypts and decrypts data using the session keys.
   - Ensures data integrity using MAC.
3. *Alert Protocol*:
   - Notifies errors or warnings during the session.
4. *Change Cipher Spec Protocol*:
   - Signals the transition to encrypted communication.

#### *Applications*
- Secure web browsing (HTTPS).
- Secure email (SMTPS, IMAPS).
- Virtual Private Networks (VPNs).

#### *Advantages*
- Provides end-to-end encryption.
- Protects against eavesdropping and tampering.

---

### *5. Explain Encapsulating IP Security Payload (ESP) in Detail*

*Encapsulating Security Payload (ESP)* is a protocol within IPsec (Internet Protocol Security) used to provide confidentiality, integrity, and authentication for IP packets.

#### *Key Features*
1. *Purpose*: Encrypts and authenticates IP packets.
2. *Modes of Operation*:
   - *Transport Mode*: Encrypts only the payload (data) of the IP packet.
   - *Tunnel Mode*: Encrypts the entire IP packet (header + payload).

#### *ESP Packet Structure*
1. *Header*:
   - SPI (Security Parameters Index): Identifies the security association.
   - Sequence Number: Prevents replay attacks.
2. *Payload Data*:
   - Encrypted data (confidentiality).
3. *Trailer*:
   - Padding: Ensures alignment.
   - Pad Length: Indicates the padding size.
   - Next Header: Identifies the type of data (e.g., TCP, UDP).
4. *Integrity Check Value (ICV)*:
   - Provides data integrity and authentication.

#### *How ESP Works*
1. *Encryption*:
   - Uses symmetric encryption algorithms (e.g., AES, 3DES).
2. *Authentication*:
   - Uses HMAC to ensure data integrity.
3. *Processing Steps*:
   - At the sender: Encrypts the payload, adds the ESP header and trailer, and computes the ICV.
   - At the receiver: Verifies the ICV, decrypts the payload, and processes the data.

#### *Applications*
- Virtual Private Networks (VPNs).
- Secure communication between networks.

#### *Advantages*
- Provides both confidentiality and integrity.
- Supports multiple encryption and authentication algorithms.

---
